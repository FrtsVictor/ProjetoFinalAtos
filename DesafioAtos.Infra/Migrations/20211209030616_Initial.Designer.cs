// <auto-generated />
using System;
using DesafioAtos.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DesafioAtos.Infra.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20211209030616_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DesafioAtos.Domain.Dtos.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Categorias")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpresaColetoraId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaColetoraId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("DesafioAtos.Domain.Entities.Coleta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("EmpresaColetoraId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaColetoraId");

                    b.ToTable("Coletas");
                });

            modelBuilder.Entity("DesafioAtos.Domain.Entities.ItemDeColeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<int?>("ColetaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ColetaId");

                    b.ToTable("ItensDeColetas");
                });

            modelBuilder.Entity("DesafioAtos.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EmpresaColetora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("CHAR(12)")
                        .IsFixedLength();

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("CHAR(11)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.ToTable("EmpresasColetoras");
                });

            modelBuilder.Entity("Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("VARCHAR(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("EmpresaColetoraId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("VARCHAR(12)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaColetoraId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("DesafioAtos.Domain.Dtos.Categoria", b =>
                {
                    b.HasOne("EmpresaColetora", null)
                        .WithMany("Categoria")
                        .HasForeignKey("EmpresaColetoraId");
                });

            modelBuilder.Entity("DesafioAtos.Domain.Entities.Coleta", b =>
                {
                    b.HasOne("EmpresaColetora", "EmpresaColetora")
                        .WithMany()
                        .HasForeignKey("EmpresaColetoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpresaColetora");
                });

            modelBuilder.Entity("DesafioAtos.Domain.Entities.ItemDeColeta", b =>
                {
                    b.HasOne("DesafioAtos.Domain.Entities.Coleta", null)
                        .WithMany("ItensDeColeta")
                        .HasForeignKey("ColetaId");
                });

            modelBuilder.Entity("Endereco", b =>
                {
                    b.HasOne("EmpresaColetora", null)
                        .WithMany("Endereco")
                        .HasForeignKey("EmpresaColetoraId");
                });

            modelBuilder.Entity("DesafioAtos.Domain.Entities.Coleta", b =>
                {
                    b.Navigation("ItensDeColeta");
                });

            modelBuilder.Entity("EmpresaColetora", b =>
                {
                    b.Navigation("Categoria");

                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
